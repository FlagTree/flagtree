; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @kernel_add(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %5 = and i32 %4, 31, !dbg !10
  %6 = zext nneg i32 %5 to i64, !dbg !11
  %7 = getelementptr float, ptr addrspace(1) %2, i64 %6, !dbg !11
  %8 = getelementptr float, ptr addrspace(1) %0, i64 %6, !dbg !12
  %9 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %8, i1 true) #1, !dbg !13
  %10 = bitcast i32 %9 to float, !dbg !13
  %11 = getelementptr float, ptr addrspace(1) %1, i64 %6, !dbg !14
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #1, !dbg !15
  %13 = bitcast i32 %12 to float, !dbg !15
  %14 = fadd float %10, %13, !dbg !16
  %15 = and i32 %4, 96, !dbg !17
  %16 = icmp eq i32 %15, 0, !dbg !17
  %17 = bitcast float %14 to i32, !dbg !17
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %17, ptr addrspace(1) %7, i1 %16) #1, !dbg !17
  ret void, !dbg !18
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "test_cache.py", directory: "/home/fanxiangyu/flagtree/python/test/unit/runtime")
!4 = !{ptr @kernel_add, !"kernel", i32 1}
!5 = !{ptr @kernel_add, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "kernel_add", linkageName: "kernel_add", scope: !3, file: !3, line: 438, type: !8, scopeLine: 438, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 439, column: 23, scope: !7)
!11 = !DILocation(line: 440, column: 17, scope: !7)
!12 = !DILocation(line: 440, column: 34, scope: !7)
!13 = !DILocation(line: 440, column: 30, scope: !7)
!14 = !DILocation(line: 440, column: 53, scope: !7)
!15 = !DILocation(line: 440, column: 49, scope: !7)
!16 = !DILocation(line: 440, column: 41, scope: !7)
!17 = !DILocation(line: 440, column: 22, scope: !7)
!18 = !DILocation(line: 440, column: 4, scope: !7)
